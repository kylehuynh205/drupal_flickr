<?php

/**
 * @file
 * Contains flickr.module.
 */
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\field\Entity\FieldStorageConfig;
use Drupal\field\Entity\FieldConfig;

/**
 * Implements hook_help().
 */
function flickr_help($route_name, RouteMatchInterface $route_match) {
    switch ($route_name) {
        // Main module help for the flickr module.
        case 'help.page.flickr':
            $output = '';
            $output .= '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('Flickr Integration') . '</p>';
            return $output;

        default:
    }
}

/**
 * Implements hook_theme().
 */
function flickr_theme() {
    return [
        'flickr' => [
            'render element' => 'children',
        ],
    ];
}

/**
 * Run Download Data Cron
 */
function flickr_cron() {
    print_log("Running Crons");
    //start_flickr_sync_cron_task();
    \Drupal::lock()->release('cron');
}

/**
 * Run operation of sync with Flickr
 * 
 * @param type $form
 * @param type $form_state
 */
function start_flickr_sync_cron_task() {
    \Drupal::state()->set(Utils::CRON_VARIABLE_FLICKR_PHOTO, 0);
    // get next tiem 
    if (\Drupal::service('cron')->run()) {
        drupal_set_message(t('Cron ran successfully.'));
        //variable_set(CRON_VARIABLE_FLICKR_PHOTO, time() + FLICKR_CRON_INTERVAL);
        \Drupal::state()->set(Utils::CRON_VARIABLE_FLICKR_PHOTO, time() + Utils::FLICKR_CRON_INTERVAL);
    } else {
        drupal_set_message(t('Cron run failedsafdsadfasd.'), 'error');
    }
}

/**
 * hook_queue_info
 */
function flickr_queue_info() {
    $service = \Drupal::service('flickr.download');
    $page = 1;
    $result = $service->rest_get_flickr_photos($service, $page);
    do_download_all_photos_at_once($service, $result);
}

/**
 * DEBUG : log msg
 * 
 */
function print_log($thing) {
    error_log(print_r($thing, true), 0);
}

function logging($thing) {
    echo '<pre>';
    print_r($thing);
    echo '</pre>';
}

/**
 * Implements hook_insert().
 */
function flickr_entity_insert(\Drupal\Core\Entity\EntityInterface $node) {
    // Set the URL alias
    if (get_class($node) == 'Drupal\node\Entity\Node') {
        \Drupal\flickr\Classes\Utils::createNodeAlias($node);
    }
}

function flickr_entity_update(\Drupal\Core\Entity\EntityInterface $node) {
    if (get_class($node) == 'Drupal\node\Entity\Node') {
        \Drupal\flickr\Classes\Utils::createNodeAlias($node);
    }
}


/**
 * Hook_install
 */
function flickr_install() {

    // create role for module 
    if (!\Drupal\flickr\Classes\Utils::isRoleExisted(Drupal\flickr\classes\Utils::getRole()['id'])) {
        \Drupal\flickr\Classes\Utils::createRole(Drupal\flickr\classes\Utils::getRole());
    }
}

/**
 * Hook uninstall
 */
function flickr_uninstall() {

    // delete exclusive role of the module
    \Drupal\flickr\Classes\Utils::deleteRole(Drupal\flickr\classes\Utils::getRole()['id']);
}
